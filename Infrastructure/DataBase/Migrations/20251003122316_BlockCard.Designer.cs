// <auto-generated />
using System;
using ConsoleApp1.Infrastructure.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace QuizBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251003122316_BlockCard")]
    partial class BlockCard
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp1.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CountWrongPassword")
                        .HasColumnType("int");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 1000f,
                            CardNumber = "6104337926697655",
                            CountWrongPassword = 0,
                            HolderName = "Mojtaba Abdollahi",
                            IsActive = true,
                            Password = "2025"
                        },
                        new
                        {
                            Id = 2,
                            Balance = 155f,
                            CardNumber = "6104337925841333",
                            CountWrongPassword = 0,
                            HolderName = "Ali Roshani",
                            IsActive = true,
                            Password = "2020"
                        },
                        new
                        {
                            Id = 3,
                            Balance = 20f,
                            CardNumber = "6104337925841355",
                            CountWrongPassword = 0,
                            HolderName = "Mohammad Moradi",
                            IsActive = true,
                            Password = "1234"
                        },
                        new
                        {
                            Id = 4,
                            Balance = 30000f,
                            CardNumber = "6104337926687448",
                            CountWrongPassword = 0,
                            HolderName = "Hadi Kazemi",
                            IsActive = false,
                            Password = "8778"
                        });
                });

            modelBuilder.Entity("ConsoleApp1.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("DestinationCardId")
                        .HasColumnType("int");

                    b.Property<int>("SourceCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isSuccessful")
                        .HasColumnType("bit");

                    b.HasKey("TransactionId");

                    b.HasIndex("DestinationCardId");

                    b.HasIndex("SourceCardId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ConsoleApp1.Entities.Transaction", b =>
                {
                    b.HasOne("ConsoleApp1.Entities.Card", "DestinationCard")
                        .WithMany()
                        .HasForeignKey("DestinationCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Entities.Card", "SourceCard")
                        .WithMany("TransactionList")
                        .HasForeignKey("SourceCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DestinationCard");

                    b.Navigation("SourceCard");
                });

            modelBuilder.Entity("ConsoleApp1.Entities.Card", b =>
                {
                    b.Navigation("TransactionList");
                });
#pragma warning restore 612, 618
        }
    }
}
